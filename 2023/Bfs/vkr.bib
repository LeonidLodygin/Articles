% !TeX spellcheck = ru_RU
@article{bulucc2012parallel,
  title={Parallel sparse matrix-matrix multiplication and indexing: Implementation and experiments},
  author={Bulu{\c{c}}, Aydin and Gilbert, John R},
  journal={SIAM Journal on Scientific Computing},
  volume={34},
  number={4},
  pages={C170--C191},
  year={2012},
  publisher={SIAM}
}

@article{davis2018algorithm,
  title={Algorithm 9xx: SuiteSparse: GraphBLAS: graph algorithms in the language of sparse linear algebra},
  author={Davis, Timothy},
  journal={Submitted to ACM TOMS},
  year={2018}
}

@inproceedings{Roberts2006MultiCorePI,
  title={Multi-Core Programming Increasing Performance through Software Multi-threading},
  author={Akhter, Shameem and Jason, Roberts},
  year={2006}
}

@inproceedings{10.5555/2387880.2387884,
author = {Kyrola, Aapo and Blelloch, Guy and Guestrin, Carlos},
title = {GraphChi: Large-Scale Graph Computation on Just a PC},
year = {2012},
isbn = {9781931971966},
publisher = {USENIX Association},
address = {USA},
abstract = {Current systems for graph computation require a distributed computing cluster to handle very large real-world problems, such as analysis on social networks or the web graph. While distributed computational resources have become more accessible, developing distributed graph algorithms still remains challenging, especially to non-experts.In this work, we present GraphChi, a disk-based system for computing efficiently on graphs with billions of edges. By using a well-known method to break large graphs into small parts, and a novel parallel sliding windows method, GraphChi is able to execute several advanced data mining, graph mining, and machine learning algorithms on very large graphs, using just a single consumer-level computer. We further extend GraphChi to support graphs that evolve over time, and demonstrate that, on a single computer, GraphChi can process over one hundred thousand graph updates per second, while simultaneously performing computation. We show, through experiments and theoretical analysis, that GraphChi performs well on both SSDs and rotational hard drives.By repeating experiments reported for existing distributed systems, we show that, with only fraction of the resources, GraphChi can solve the same problems in very reasonable time. Our work makes large-scale graph computation available to anyone with a modern PC.},
booktitle = {Proceedings of the 10th USENIX Conference on Operating Systems Design and Implementation},
pages = {31â€“46},
numpages = {16},
location = {Hollywood, CA, USA},
series = {OSDI'12}
}
